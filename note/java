## java拾遗

1. 反射：反射是为了解决在运行期，对某个实例一无所知的情况下，如何调用其方法。

2. 这种通过Class实例获取class信息的方法称为反射（Reflection）。

3. JVM为每个加载的class及interface创建了对应的Class实例来保存class及interface的所有信息；获取一个class对应的Class实例后，就可以获取该class的所有信息；
   
4. JVM总是动态加载class，可以在运行期根据条件来控制加载class。

5. 如何获取一个class的Class实例：
   - 方法一：直接通过一个class的静态变量class获取 **Class cls = String.class**;
   - 方法二：如果我们有一个实例变量，可以通过该实例变量提供的getClass()方法获取 **String s = "Hello"; Class cls = s.getClass();**
   - 方法三：如果知道一个class的完整类名，可以通过静态方法Class.forName()获取 **Class cls = Class.forName("java.lang.String")**;